# Generated by Django 5.2.5 on 2025-08-26 11:30

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=255)),
                ('partner_id', models.CharField(blank=True, editable=False, max_length=20, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='partner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('plan_type', models.CharField(choices=[('LIFETIME', 'One-Time Fee (Lifetime Access)'), ('WALLET_CREDIT', 'Wallet Credit with Validity'), ('SUBSCRIPTION', 'Time-based Subscription')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, help_text='The upfront cost of the plan.', max_digits=10)),
                ('duration_days', models.PositiveIntegerField(blank=True, help_text='Validity in days. Leave empty for Lifetime plans.', null=True)),
                ('description', models.TextField(blank=True)),
                ('required_documents', models.ManyToManyField(blank=True, help_text='Select documents required for this plan.', to='partner.documenttype')),
            ],
        ),
        migrations.CreateModel(
            name='PartnerRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('business_type', models.CharField(choices=[('individual', 'Individual'), ('partnership', 'Partnership'), ('company', 'Company')], max_length=50)),
                ('business_name', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('payment_status', models.CharField(default='pending', max_length=20)),
                ('order_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('selected_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='partner.partnerplan')),
            ],
        ),
        migrations.CreateModel(
            name='PartnerRequestDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='partner_documents/')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partner.documenttype')),
                ('partner_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='partner.partnerrequest')),
            ],
        ),
        migrations.CreateModel(
            name='PartnerSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, help_text='Access expiry date. Null for lifetime plans.', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Controls if the subscription benefits are currently active.')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='partner.partner')),
                ('plan', models.ForeignKey(help_text='The plan this subscription is for.', on_delete=django.db.models.deletion.PROTECT, to='partner.partnerplan')),
            ],
        ),
        migrations.CreateModel(
            name='PartnerWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('balance_expires_at', models.DateTimeField(blank=True, help_text='The date when the current balance expires.', null=True)),
                ('partner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to='partner.partner')),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('INITIAL_CREDIT', 'Initial Plan Credit'), ('TOP_UP', 'Wallet Top-up'), ('SERVICE_PAYMENT', 'Service Payment'), ('REFUND', 'Refund Credit'), ('EXPIRY', 'Expired Balance Reset')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Positive for credits, negative for debits.', max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField(blank=True, help_text='e.g., Order ID, Payment ID, or a note.')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='partner.partnerwallet')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('partner_customer_id', models.CharField(blank=True, editable=False, max_length=50, unique=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='partner.partner')),
            ],
            options={
                'unique_together': {('partner', 'email')},
            },
        ),
    ]
